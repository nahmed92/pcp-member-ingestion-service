<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.delta.pcpingestion</groupId>
	<artifactId>pcp-member-ingestion-service</artifactId>
	<version>1.0.0</version>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.3.RELEASE</version>
		<relativePath />
	</parent>
	<name>pcp-member-ingestion-service</name>
	<description>Spring Boot ingestion Service</description>
	<properties>
		<java.version>11</java.version>
		<!-- Maven version as of 1/15/2019 -->
		<maven-compiler.version>3.8.0</maven-compiler.version>
		<services-common-library-version>1.0.12</services-common-library-version>
		<checkstyle.version>8.4</checkstyle.version>
		<h2.version>1.4.200</h2.version>
		<maven-check-style-plugin-version>2.17</maven-check-style-plugin-version>
		<sevntu-checkstyle-plugin-version>1.24.2</sevntu-checkstyle-plugin-version>
		<docker.plugin.version>0.2.3</docker.plugin.version>
		<!-- SonarQube properties -->
		<jacoco.version>0.8.5</jacoco.version>
		<jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
		<jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
		<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
		<sonar.projectKey>${project.name}</sonar.projectKey>
		<sonar.projectName>PCP Search Service</sonar.projectName>
		<sonar.language>java</sonar.language>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>
		<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
		<sonar.surefire.reportsPath>target/surefire-reports</sonar.surefire.reportsPath>
		<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- Added for actuator -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.3.7.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>5.3.6.Final</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-validator -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>7.0.2.Final</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.github.ben-manes.caffeine</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.2.11</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>2.2.11</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.deltadental.platform.enterprise.service</groupId>
			<artifactId>services-common</artifactId>
			<version>${services-common-library-version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Jacoco integration test plugin -->
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.6.0.1398</version>
			</plugin>
			<!-- Plugin to copy the log4j.xml from platform's common library to follow 
				standard log patterns -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>log4j2</id>
						<phase>process-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.deltadental.platform.enterprise.service</groupId>
									<artifactId>services-common</artifactId>
									<version>${services-common-library-version}</version>
									<outputDirectory>target/classes/</outputDirectory>
									<includes>log4j2.xml</includes>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Compiler plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler.version}</version>
				<configuration>
					<release>11</release>
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
				</configuration>
			</plugin>
			<!-- Docker image creation -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.plugin.version}</version>
				<configuration>
					<imageName>${project.artifactId}</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<!-- End Docker image creation -->
			<!-- Checkstyle plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<configuration>
							<configLocation>delta-platform-checkstyle.xml</configLocation>
							<encoding>UTF-8</encoding>
							<consoleOutput>false</consoleOutput>
							<failsOnError>false</failsOnError>
							<skip>true</skip>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Surefire unit test plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<argLine>--illegal-access=permit</argLine>
					<properties>
						<property>
							<name>listener</name>
							<value>org.sonar.java.jacoco.JUnitListener</value>
						</property>
					</properties>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>
			<!-- Failsafe integration test plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<argLine>--illegal-access=permit -Xmx1024m -XX:MaxPermSize=256m}</argLine>
					<properties>
						<property>
							<name>listener</name>
							<value>org.sonar.java.jacoco.JUnitListener</value>
						</property>
					</properties>
					<!-- Put failsafe reports with surefire to have access to tests failures/success 
						reports in sonar -->
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
				<executions>
					<!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info 
						to be passed to the JVM hosting the code being tested. -->
					<execution>
						<id>prepare-ut-agent</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.reportPath}</destFile>
							<propertyName>jacoco.agent.ut.arg</propertyName>
							<append>true</append>
						</configuration>
					</execution>
					<!-- Prepares a variable, jacoco.agent.it.arg, that contains the info 
						to be passed to the JVM hosting the code being tested. -->
					<execution>
						<id>prepare-it-agent</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.itReportPath}</destFile>
							<propertyName>jacoco.agent.it.arg</propertyName>
							<append>true</append>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>